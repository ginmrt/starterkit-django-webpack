server {
    listen 80;
    listen [::]:80;
    server_name myapp.com www.myapp.com;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response
    return 301 https://myapp.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name myapp.com;

    access_log /var/log/python/myapp.access.log;
    error_log /var/log/python/myapp.error.log;

    root /srv/allmyapps/myapp/;

    # If you want to use Let's Encrypt for your site's certificate.
    # Otherwise, remove this block.
    location ~ /.well-known {
        allow all;
    }

    # Cache-Busting for all static files done here
    #   regex that captures all requests made to
    #   /static(/HASH_CODE)/STATIC_FILE_PATH
    #   (See https://github.com/resulto/django-static-url)
    location ~ ^/static/([a-f0-9-]+/)?(.*)$ {
        # Set static file expiration
        expires 7d;
        alias /srv/allmyapps/myapp/static/$2;
    }

    # Enable Basic Auth on the URL serving the Django admin pages
    location ^~ /admin {
        auth_basic "Restricted";
        auth_basic_user_file /srv/allmyapps/myapp/config/.htpasswd-djangoadmin;

        include uwsgi_params;
        uwsgi_pass 127.0.0.1:8888;
    }

    # Other matches go to the website
    location / {
        include uwsgi_params;
        uwsgi_pass 127.0.0.1:8888;
    }

    # TODO # Site Certificate
    # (Example with Let's Encrypt certificate)
    ssl_certificate /etc/letsencrypt/live/myapp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/myapp.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/myapp.com/chain.pem;
}
